name: OpenOrClosed - CI

on:
  pull_request:

env:
  SOLUTION: OpenOrClosed.sln
  OUTPUT_PATH: ${{ github.workspace }}\.output

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['7.x' ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
      
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3

      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
#     - name: Setup MSBuild
#       uses: microsoft/setup-msbuild@v1.1

#     - name: Restore NuGet packages
#       run: msbuild ${{ env.SOLUTION }} -t:restore

#     - name: Copy lucene analyser
#       run: |
#         $src = "C:\Users\runneradmin\.nuget\packages\lucene.net\4.8.0-beta00014\analyzers\dotnet\cs"
#         $dest = "C:\Users\runneradmin\.nuget\packages\lucene.net\3.0.3\analyzers\dotnet\cs"
#         if (!(Test-Path -Path $dest)) {
#             New-Item -ItemType directory -Path $dest
#         }
#         Copy-Item -Path $src\*.dll -Destination $dest

#     - name: Build solution
#       run: msbuild ${{ env.SOLUTION }} -p:Configuration=Release -p:GeneratePackageOnBuild=true -p:PackageOutputPath=${{ env.OUTPUT_PATH }}

    - name: Install dependencies
      run: dotnet restore
  
    - name: Build
      run: dotnet build --configuration Release --no-restore
        
    - name: Create the package
      run: dotnet pack --configuration Release
      
    - name: Upload NuGet artifacts
      uses: actions/upload-artifact@v1
      with:
        name: nuget
        path: ${{ env.OUTPUT_PATH }}
