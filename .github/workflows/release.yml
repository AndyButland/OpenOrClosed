name: OpenOrClosed - Release

on:
  push:
    branches: [ master ]

env:
  SOLUTION: OpenOrClosed.sln
  PLUGIN_PROJECT: OpenOrClosed\OpenOrClosed.csproj
  CORE_PROJECT: OpenOrClosed.Core\OpenOrClosed.Core.csproj
  OUTPUT_PATH: ${{ github.workspace }}\.output

jobs:
  publish-nuget:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore NuGet packages
      run: msbuild ${{ env.SOLUTION }} -t:restore

    - name: Copy lucene analyser
      run: |
        $src = "C:\Users\runneradmin\.nuget\packages\lucene.net\4.8.0-beta00014\analyzers\dotnet\cs"
        $dest = "C:\Users\runneradmin\.nuget\packages\lucene.net\3.0.3\analyzers\dotnet\cs"
        if (!(Test-Path -Path $dest)) {
            New-Item -ItemType directory -Path $dest
        }
        Copy-Item -Path $src\*.dll -Destination $dest

    - name: Create Nuget Packages
      run: msbuild ${{ env.SOLUTION }} -p:Configuration=Release -p:GeneratePackageOnBuild=true -p:PackageOutputPath=${{ env.OUTPUT_PATH }}
      
    - name: Publish to NuGet
      run: dotnet nuget push "${{ env.OUTPUT_PATH }}\*.nupkg" --skip-duplicate --api-key "$env:apiKey" -s https://api.nuget.org/v3/index.json
      env:
        apiKey: ${{ secrets.NUGET_API_KEY }}

    - name: Get Release Version
      id: package_version
      uses: KageKirin/get-csproj-version@v0
      with:
        file: ${{ env.PLUGIN_PROJECT }}

    - uses: avakar/tag-and-release@v1
      name: Create Release Tag v${{ steps.package_version.outputs.version }}
      id: release
      with:
        tag_name: v${{ steps.package_version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Release information for v${{ steps.package_version.outputs.version }}
      run: |
        echo Release Id: ${{ steps.release.outputs.id }}
        echo Upload URL: ${{ steps.release.outputs.upload_url }}
        echo Release URL: ${{ steps.release.outputs.html_url }}
